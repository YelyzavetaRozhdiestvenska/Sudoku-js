{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","src/utilities.js","src/sudokuGenerator.js","src/sudoku.js","src/index.js","<<jsx-config-pragma.js>>"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export const GRID_SIZE = 9;\nexport const BOX_SIZE = 3;\n\nexport function convertIndexToPosition(index) {\n  return {\n    row: Math.floor(index / GRID_SIZE),\n    //   остаток от деления номера ячейки на 9:\n    column: index % GRID_SIZE,\n  };\n}\n\nexport function convertPositionToIndex(row, column) {\n  return row * GRID_SIZE + column;\n}\n","import { GRID_SIZE, BOX_SIZE } from './utilities.js';\n\nexport function generateSudoku() {\n  const sudoku = createEmptyGrid();\n  resolveSudoku(sudoku);\n  //   console.table(sudoku);\n  // возвращаем незаполненную сетку для игры:\n  return removeCells(sudoku);\n}\n\n// создаем 9 массивов и заполняем каждый из них массивом из 9\nfunction createEmptyGrid() {\n  return new Array(GRID_SIZE).fill().map(() => new Array(GRID_SIZE).fill(null));\n}\n\n// Заполняет двухмерный массив числами, чтоб получилась корректная сетка судоку\nfunction resolveSudoku(grid) {\n  // находим пустую ячейку\n  const emptyCell = findEmptyCell(grid);\n  //Eсли не находим пустую ячейку, таблица заполнена:\n  if (!emptyCell) return true;\n\n  const numbers = getRandomNumbers();\n\n  // рекурсия\n  for (let i = 0; i < numbers.length; i++) {\n    if (!validate(grid, emptyCell.row, emptyCell.column, numbers[i])) continue;\n\n    grid[emptyCell.row][emptyCell.column] = numbers[i];\n\n    if (resolveSudoku(grid)) return true;\n\n    grid[emptyCell.row][emptyCell.column] = null;\n  }\n}\n\nexport function findEmptyCell(grid) {\n  for (let row = 0; row < GRID_SIZE; row++) {\n    for (let column = 0; column < GRID_SIZE; column++) {\n      if (grid[row][column] === null) return { row, column };\n    }\n  }\n  // Если нет пустых ячеек:\n  return null;\n}\n\nfunction getRandomNumbers() {\n  // создаем упорядоченный массив:\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  // перемешиваем массив:\n  for (let i = numbers.length - 1; i >= 0; i--) {\n    const randomIndex = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[randomIndex]] = [numbers[randomIndex], numbers[i]];\n  }\n\n  return numbers;\n}\n\nfunction validate(grid, row, column, value) {\n  return (\n    validateColumn(grid, row, column, value) &&\n    validateRow(grid, row, column, value) &&\n    validateBox(grid, row, column, value)\n  );\n}\n\nfunction validateColumn(grid, row, column, value) {\n  // пробегаемся по всем строкам в столбце, кроме ячейки row, в которую вписываем значение.\n  // iRow - индекс прoверяемой строки\n  for (let iRow = 0; iRow < GRID_SIZE; iRow++) {\n    if (grid[iRow][column] === value && iRow !== row) return false;\n  }\n  return true;\n}\n\nfunction validateRow(grid, row, column, value) {\n  for (let iColumn = 0; iColumn < GRID_SIZE; iColumn++) {\n    if (grid[row][iColumn] === value && iColumn !== column) return false;\n  }\n  return true;\n}\n\n//Чтоб получить координаты внутреннего верхнего левого квадрата, нужно найти смещение от среднего нижнего квардата.\n//  Чтоб вычислить смещение, нужно получить остаток от деления координат нижней ячейки на размер маленького квадрата\nfunction validateBox(grid, row, column, value) {\n  const firstRowInBox = row - (row % BOX_SIZE);\n  const firstColumnInBox = column - (column % BOX_SIZE);\n\n  for (let iRow = firstRowInBox; iRow < firstRowInBox + BOX_SIZE; iRow++) {\n    for (\n      let iColumn = firstColumnInBox;\n      iColumn < firstColumnInBox + BOX_SIZE;\n      iColumn++\n    ) {\n      if (grid[iRow][iColumn] === value && iRow !== row && iColumn !== column)\n        return false;\n    }\n  }\n  return true;\n}\n\nfunction removeCells(grid) {\n  // количество заполняемых ячеек\n  const DIFFICULTY = 30;\n  const resultGrid = [...grid].map(row => [...row]);\n\n  let i = 0;\n  while (i < DIFFICULTY) {\n    let row = Math.floor(Math.random() * GRID_SIZE);\n    let column = Math.floor(Math.random() * GRID_SIZE);\n    if (resultGrid[row][column] !== null) {\n      resultGrid[row][column] = null;\n      i++;\n    }\n  }\n  //   console.table(resultGrid);\n  return resultGrid;\n}\n","import { GRID_SIZE, BOX_SIZE } from './utilities.js';\nimport { generateSudoku, findEmptyCell } from './sudokuGenerator.js';\n\nexport class Sudoku {\n  constructor() {\n    this.grid = generateSudoku();\n  }\n\n  getDuplicatePositions(row, column, value) {\n    const duplicatesInColumn = this.getDuplicatePositionsInColumn(\n      row,\n      column,\n      value\n    );\n    const duplicatesInRow = this.getDuplicatePositionsInRow(row, column, value);\n    const duplicatesInBox = this.getDuplicatePositionsInBox(row, column, value);\n\n    const duplicates = [...duplicatesInColumn, ...duplicatesInRow];\n    duplicatesInBox.forEach(duplicateInBox => {\n      if (duplicateInBox.row !== row && duplicateInBox.column !== column)\n        duplicates.push(duplicateInBox);\n    });\n\n    return duplicates;\n  }\n\n  getDuplicatePositionsInColumn(row, column, value) {\n    const duplicates = [];\n    for (let iRow = 0; iRow < GRID_SIZE; iRow++) {\n      if (this.grid[iRow][column] === value && iRow !== row) {\n        duplicates.push({ row: iRow, column });\n      }\n    }\n    return duplicates;\n  }\n\n  getDuplicatePositionsInRow(row, column, value) {\n    const duplicates = [];\n    for (let iColumn = 0; iColumn < GRID_SIZE; iColumn++) {\n      if (this.grid[row][iColumn] === value && iColumn !== column) {\n        duplicates.push({ row, column: iColumn });\n      }\n    }\n    return duplicates;\n  }\n\n  getDuplicatePositionsInBox(row, column, value) {\n    const duplicates = [];\n    const firstRowInBox = row - (row % BOX_SIZE);\n    const firstColumnInBox = column - (column % BOX_SIZE);\n\n    for (let iRow = firstRowInBox; iRow < firstRowInBox + BOX_SIZE; iRow++) {\n      for (\n        let iColumn = firstColumnInBox;\n        iColumn < firstColumnInBox + BOX_SIZE;\n        iColumn++\n      ) {\n        if (\n          this.grid[iRow][iColumn] === value &&\n          iRow !== row &&\n          iColumn !== column\n        ) {\n          duplicates.push({ row: iRow, column: iColumn });\n        }\n      }\n    }\n    return duplicates;\n  }\n\n  hasEmptyCells() {\n    return Boolean(findEmptyCell(this.grid));\n  }\n}\n","// import { generateSudoku } from './sudokuGenerator.js';\n\n// generateSudoku();\nimport { Sudoku } from './sudoku.js';\nimport {\n  GRID_SIZE,\n  BOX_SIZE,\n  convertIndexToPosition,\n  convertPositionToIndex,\n} from './utilities.js';\n\nconst sudoku = new Sudoku();\nlet cells;\nlet selectedCellIndex;\nlet selectedCell;\ninit();\n\nfunction init() {\n  initCells();\n  initNumbers();\n  initRemover();\n  initKeyEvent();\n}\n\nfunction initCells() {\n  cells = document.querySelectorAll('.cell');\n  fillCells();\n  initCellsEvent();\n}\n\nfunction fillCells() {\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n    const { row, column } = convertIndexToPosition(i);\n\n    if (sudoku.grid[row][column] !== null) {\n      cells[i].classList.add('filled');\n      cells[i].innerHTML = sudoku.grid[row][column];\n    }\n  }\n}\n\nfunction initCellsEvent() {\n  cells.forEach((cell, index) => {\n    cell.addEventListener('click', () => onCellClick(cell, index));\n  });\n}\n\nfunction onCellClick(clickedCell, index) {\n  cells.forEach(cell =>\n    cell.classList.remove('highlighted', 'selected', 'error')\n  );\n\n  if (clickedCell.classList.contains('filled')) {\n    selectedCellIndex = null;\n    selectedCell = null;\n  } else {\n    selectedCellIndex = index;\n    selectedCell = clickedCell;\n    clickedCell.classList.add('selected');\n    highlightCellsBy(index);\n  }\n  // выделение ячеек с таким числом, как выбрали\n  if (clickedCell.innerHTML === '') return;\n  cells.forEach(cell => {\n    if (cell.innerHTML === clickedCell.innerHTML)\n      cell.classList.add('selected');\n  });\n}\n\nfunction highlightCellsBy(index) {\n  highlightColumnBy(index);\n  highlightRowBy(index);\n  highlightBoxBy(index);\n}\n\nfunction highlightColumnBy(index) {\n  const column = index % GRID_SIZE;\n  for (let row = 0; row < GRID_SIZE; row++) {\n    const cellIndex = convertPositionToIndex(row, column);\n    cells[cellIndex].classList.add('highlighted');\n  }\n}\n\nfunction highlightRowBy(index) {\n  const row = Math.floor(index / GRID_SIZE);\n  for (let column = 0; column < GRID_SIZE; column++) {\n    const cellIndex = convertPositionToIndex(row, column);\n    cells[cellIndex].classList.add('highlighted');\n  }\n}\n\nfunction highlightBoxBy(index) {\n  const column = index % GRID_SIZE;\n  const row = Math.floor(index / GRID_SIZE);\n  const firstRowInBox = row - (row % BOX_SIZE);\n  const firstColumnInBox = column - (column % BOX_SIZE);\n\n  for (let iRow = firstRowInBox; iRow < firstRowInBox + BOX_SIZE; iRow++) {\n    for (\n      let iColumn = firstColumnInBox;\n      iColumn < firstColumnInBox + BOX_SIZE;\n      iColumn++\n    ) {\n      const cellIndex = convertPositionToIndex(iRow, iColumn);\n      cells[cellIndex].classList.add('highlighted');\n    }\n  }\n}\n\nfunction initNumbers() {\n  const numbers = document.querySelectorAll('.number');\n  numbers.forEach(number => {\n    number.addEventListener('click', () =>\n      //из строки делаем число:\n      onNumberClick(parseInt(number.innerHTML))\n    );\n  });\n}\n\nfunction onNumberClick(number) {\n  if (!selectedCell) return;\n  if (selectedCell.classList.contains('filled')) return;\n\n  cells.forEach(cell =>\n    cell.classList.remove('error', 'zoom', 'shake', 'selected')\n  );\n  selectedCell.classList.add('selected');\n  setValueInSelectedCell(number);\n\n  if (!sudoku.hasEmptyCells()) {\n    setTimeout(() => winAnimation(), 500);\n  }\n}\n\nfunction setValueInSelectedCell(value) {\n  // индекс выделенной ячейки преобразовываем в row и column:\n  const { row, column } = convertIndexToPosition(selectedCellIndex);\n  //  Находим все дубликаты числа, которые пытаемся добавить:\n  const duplicatesPositions = sudoku.getDuplicatePositions(row, column, value);\n  if (duplicatesPositions.length) {\n    highlightDuplicates(duplicatesPositions);\n    return;\n  }\n  // когда дубликатов нет:\n  sudoku.grid[row][column] = value;\n  selectedCell.innerHTML = value;\n  setTimeout(() => selectedCell.classList.add('zoom'), 0);\n}\n\nfunction highlightDuplicates(duplicatesPositions) {\n  duplicatesPositions.forEach(duplicate => {\n    const index = convertPositionToIndex(duplicate.row, duplicate.column);\n    setTimeout(() => cells[index].classList.add('error', 'shake'), 0);\n  });\n}\n\n// удаление значений из ячеек\nfunction initRemover() {\n  const remover = document.querySelector('.remove');\n  remover.addEventListener('click', () => onRemoveClick());\n}\n\nfunction onRemoveClick() {\n  if (!selectedCell) return;\n  if (selectedCell.classList.contains('filled')) return;\n\n  cells.forEach(cell =>\n    cell.classList.remove('error', 'zoom', 'shake', 'selected')\n  );\n  selectedCell.classList.add('selected');\n  const { row, column } = convertIndexToPosition(selectedCellIndex);\n  selectedCell.innerHTML = '';\n  sudoku.grid[row][column] = null;\n}\n\n// Нажатие цифр с клавиатуры\nfunction initKeyEvent() {\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Backspace') {\n      onRemoveClick();\n    } else if (event.key >= '1' && event.key <= '9') {\n      onNumberClick(parseInt(event.key));\n    }\n  });\n}\n",null],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","len","length","i","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","$665014edacbfe17b$exports","instance","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$33f3cb02fc7bfe01$export$e18527aea31077fa","index","row","Math","floor","column","$33f3cb02fc7bfe01$export$7317a16deca464c2","$ce2277964845dd83$export$16a0abb3798cc10f","sudoku","fill","map","$ce2277964845dd83$var$resolveSudoku","grid","DIFFICULTY","resultGrid","$parcel$interopDefault","row1","random","$ce2277964845dd83$var$removeCells","emptyCell","$ce2277964845dd83$export$d7e13cd139187350","numbers","randomIndex","ref","$ce2277964845dd83$var$getRandomNumbers","$ce2277964845dd83$var$validate","iRow","$ce2277964845dd83$var$validateColumn","iColumn","$ce2277964845dd83$var$validateRow","firstRowInBox","firstColumnInBox","$ce2277964845dd83$var$validateBox","$b8f9b7833fa37166$var$cells","$b8f9b7833fa37166$var$selectedCellIndex","$b8f9b7833fa37166$var$selectedCell","$b8f9b7833fa37166$var$sudoku","Sudoku","this","duplicatesInColumn","getDuplicatePositionsInColumn","duplicatesInRow","getDuplicatePositionsInRow","duplicatesInBox","getDuplicatePositionsInBox","duplicates","concat","forEach","duplicateInBox","push","Boolean","$b8f9b7833fa37166$var$onNumberClick","number","classList","contains","cell","remove","add","duplicatesPositions","getDuplicatePositions","duplicate","setTimeout","$b8f9b7833fa37166$var$highlightDuplicates","innerHTML","$b8f9b7833fa37166$var$setValueInSelectedCell","hasEmptyCells","winAnimation","$b8f9b7833fa37166$var$onRemoveClick","document","querySelectorAll","$b8f9b7833fa37166$var$fillCells","addEventListener","clickedCell","cellIndex","$b8f9b7833fa37166$var$highlightColumnBy","$b8f9b7833fa37166$var$highlightRowBy","$b8f9b7833fa37166$var$highlightBoxBy","$b8f9b7833fa37166$var$highlightCellsBy","$b8f9b7833fa37166$var$onCellClick","parseInt","querySelector","event"],"version":3,"file":"index.06e5d593.js.map"}